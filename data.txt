
Backend организовывает работу web сервера, который будет отдавать страницы и статику.

------------------------------------------------------------------------------------
Страница игрового автомата.
------------------------------------------------------------------------------------

Играть в автомат могут все пользователи.
Сохранятся в таблицу результатов могут только пользователи, которые имеют уникальный ID

Процесс игры такой:
Пользователь заходит на страницу с автоматом ,где есть два обязательных поля

1. ID
2. name
name - человек придумывает себе сам. У пользователя с одним ID может быть сколько угодно разных name, может у кого будет на уме куча прикольных имен)
Результат выигранных очков будет привязан к конкретному ID и конкретному имени.
Когда с клиента будет приходить запрос про новый выигрыш, то надо искаить игрока по ID и по name, и перезаписывать результат, если текущий выигрыш больше чем в БД.

Тоесть , условно говоря, в БД могу быть такие записи
{
id: 1
name: "alex",
score: 34
},
{
id: 1
name: "pet9",
score: 89
}

и в таблице результатов
1. pet9	89
2. alex	34


Вся логика игры автомата, подсчет выигранных очков будет на клиенте, не безопасно, но быстрее реализовать.
js будет скрыт путем обфускации, запросы будут передаваться зашифрованными.

Как будут шифроваться запросы:
1. data = {	        id: 1,
name: 'alex',
score: 56
}
data - данные которые надо передать

2. сначала переводим все в строку
data = JSON.stringify(data);

3. два раза подряд md5
data = md5( md5(data) );

4. отправка data.



API
---------------------------------------------------------------------------------
1. запрос на запись нового выигрыша

url: '/api/score'
type: POST
parameters: {data: "зашифрованный текст"}
success: 200
error: 400 + { error: "Такого Id пользователя не существует" }
{ error: "Score не может быть отрцательным" }
{ error: "Запрос не корректный" } ...

2. запрос результатов игры

url: '/api/score/total'
type: GET
success: [
{
id: <id>,
name: <name>,
score: 34
}, ...
]
error: 400 + {error: "если есть какая то ошибка, прислать сюда"}
